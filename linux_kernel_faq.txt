
Q1> tasklet/workwer queue/softirq
Each device has to register its interrupt handler .whenever an interrupt occurs the OS does the 
most important part of handler "upper half" to  respond to interrupt, create a data structure 
containing device specific data called "lower half"  for later processing when CPU becomes 
available. This way interrupt handlers can be used in 

Bottom halves are required because as we know when ISR executes, it disables all other 
interrupts on running processor and same interrupt on all processors. To increase the response
 time and throughput of the system, we need to finish ISR as soon as possible. 


SOFTIRQ

1.  same SOFTIRQ can be run concurrently on different CPUs, 
2.  SOFTIRQ must be reentrant. 
3.  Soft interrupts are statically allocated  tasklet are dynamically  allocated  
4.  the kernel defines six soft interrupts: Hi_softirq, TIMER_SOFTIRQ, Net_tx_softirq, 


2, Tasklet
1.  two identical tasklet never execute at the same time  even on different processors.
2.  Tasklet can be understood as a derivation of SOFTIRQ, so its scheduling timing is same 

3. Work Queue
If the deferred task requires sleep, select the work queue. 
. The work queue is the most expensive because it involves kernel threads and 
even context switches. This is not to say that the work queue is inefficient, but there are 
thousands of interrupts per second, as the network subsystem has often experienced, 

